{"version":3,"sources":["serviceWorker.js","store/index.js","screens/todo/to-do-item.js","api-urls/to-do-api.js","screens/todo/index.js","screens/login/index.js","index.js"],"names":["Boolean","window","location","hostname","match","store","createStore","combineReducers","ToDoItem","props","class","onClick","onClickFunction","todo","todo_id","todo_data","created_at","Content","V1","gettodos","savetodos","deletetodo","validateUser","ToDo","clearAll","localStorage","clear","history","push","handleChange","event","setState","target","name","value","clearData","text_data","answer","responseList","state","toggleModal","handleModalDisplay","bind","this","prev","getItem","fetch","APIURLS","method","mode","headers","Authorization","then","response","json","key","undefined","isError","errorMsg","body","JSON","stringify","todo_title","console","log","aria-label","role","href","alt","src","id","toUpperCase","map","elementData","placeholder","onChange","className","onEnterClickAction","Component","LoginPage","getUserDetailsData","userNameNode","document","getElementById","userPermNode","trim","addEventListener","keyCode","preventDefault","click","username","password","setItem","isauth","chart","userName","handleKeyDown","e","action","for","type","required","onKeyDown","showDetails","showModal","closeModal","toggleAnalyzerModal","ErrorBoundary","hasError","children","error","React","routing","exact","path","component","Login","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.863dbc81.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\n\t\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import { combineReducers, createStore } from 'redux';\n\nconst store = createStore(\n\tcombineReducers({\t\t\n\t})\n);\n\nexport default store;\n","import React from \"react\";\n\nexport default function ToDoItem(props) {  \n  return (\n    <div>\n      <div class=\"notification is-primary\">\n      \n        <button\n          class=\"delete\"\n          onClick={() => props.onClickFunction(props.todo.todo_id)}\n        ></button>\n        {props.todo.todo_data}\n        <p class=\"level-item\"> {props.todo.created_at}</p>\n        {/* <button class=\"button\" onClick={() => props.handleModalDisplay(props.todo.todo_id)}>Edit</button> */}\n      </div>\n    </div>\n  );\n}\n","const Content = {\n\tV1: {\n\t\tgettodos: 'http://localhost:8000/api/v1/to_do',\n\t\tsavetodos: 'http://localhost:8000/api/v1/save_to_do',\n\t\tdeletetodo: 'http://localhost:8000/api/v1/delete_to_do',\t\t\n\t\tvalidateUser: 'http://localhost:8000/rest-auth/login/'\t\t\n\t}\n};\n\nexport default Content;\n","import React, { Component } from \"react\";\nimport \"./index.scss\";\nimport ToDoItem from \"./to-do-item\";\nimport APIURLS from \"../../api-urls/to-do-api\";\n\nexport class ToDo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toggleModal: false,\n      todo_id: \"\",\n      text_data: \"\",\n      answer: \"\",\n      responseList: [],\n    };\n    this.handleModalDisplay = this.handleModalDisplay.bind(this);\n    this.onClickFunction = this.onClickFunction.bind(this);\n    this.handleModalDisplay = this.handleModalDisplay.bind(this);\n  }\n\n  handleModalDisplay(todo_id) {\n    this.setState((prev) => {\n      return { toggleModal: !prev.toggleModal, todo_id: todo_id };\n    });\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem(\"key\") === null) {\n      this.props.history.push(\"/\");\n      localStorage.clear();\n    } else {\n      fetch(APIURLS.V1.gettodos, {\n        method: \"GET\",\n        mode: \"cors\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Token \" + localStorage.getItem(\"key\"),\n        },\n      })\n        .then((response) => response.json())\n        .then((json) => {\n          this.setState({\n            key: json[\"key\"],\n          });\n          if (json[\"response\"] !== undefined) {\n            this.setState({\n              responseList: json[\"response\"],\n            });\n          } else {\n            this.setState({\n              isError: true,\n              errorMsg: \"Please enter valid credentials\",\n            });\n          }\n        });\n    }\n  }\n\n  clearAll = () => {\n    localStorage.clear();\n    this.props.history.push(\"/\");\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n      text_data: event.target.value,\n    });\n  };\n\n  clearData = () => {\n    this.setState({\n      text_data: \" \",\n      answer: \"\",\n      responseList: [],\n    });\n  };\n\n  onClearClickAction() {\n    this.setState({\n      text_data: \" \",\n    });\n  }\n\n  onEnterClickAction() {\n    fetch(APIURLS.V1.savetodos, {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Token \" + localStorage.getItem(\"key\"),\n      },\n      body: JSON.stringify({\n        todo_title: \"Test To Do\",\n        todo_data: this.state.text_data,\n      }),\n    })\n      .then((response) => response.json())\n      .then((json) => {\n        if (json[\"response\"] !== undefined) {\n          fetch(APIURLS.V1.gettodos, {\n            method: \"GET\",\n            mode: \"cors\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: \"Token \" + localStorage.getItem(\"key\"),\n            },\n          })\n            .then((response) => response.json())\n            .then((json) => {\n              this.setState({\n                key: json[\"key\"],\n              });\n              if (json[\"response\"] !== undefined) {\n                this.setState({\n                  responseList: json[\"response\"],\n                });\n              } else {\n                this.setState({\n                  isError: true,\n                  errorMsg: \"Please enter valid credentials\",\n                });\n              }\n            });\n        }\n      });\n  }\n  onClickFunction(todo_id) {\n    if (todo_id !== undefined) {\n      fetch(APIURLS.V1.deletetodo, {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Token \" + localStorage.getItem(\"key\"),\n        },\n        body: JSON.stringify({\n          todo_id: todo_id,\n        }),\n      })\n        .then((response) => response.json())\n        .then((json) => {\n          if (json[\"response\"] !== undefined) {\n            console.log(\"Mandge\", json);\n            fetch(APIURLS.V1.gettodos, {\n              method: \"GET\",\n              mode: \"cors\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Token \" + localStorage.getItem(\"key\"),\n              },\n            })\n              .then((response) => response.json())\n              .then((json) => {\n                this.setState({\n                  key: json[\"key\"],\n                });\n                if (json[\"response\"] !== undefined) {\n                  this.setState({\n                    responseList: json[\"response\"],\n                  });\n                } else {\n                  this.setState({\n                    isError: true,\n                    errorMsg: \"Please enter valid credentials\",\n                  });\n                }\n              });\n          }\n        });\n    }\n  }\n\n  render() {\n    const ModalDescription = (props) => {\n      if (props.toggleModal === true) {\n        return (\n          <div class=\"modal\">\n            <div class=\"modal-background\"></div>\n            <div class=\"modal-card\">\n              <header class=\"modal-card-head\">\n                <p class=\"modal-card-title\">\n                  Do You Wanted To Delete This ToDo?\n                </p>\n                <button class=\"delete\" aria-label=\"close\"></button>\n              </header>\n              <section class=\"modal-card-body\">\n                <button class=\"button is-success\">Yes</button>\n                <button class=\"button\">Cancel</button>\n              </section>\n              {/* <footer class=\"modal-card-foot\">\n      <button class=\"button is-success\">Save changes</button>\n      <button class=\"button\">Cancel</button>\n    </footer> */}\n            </div>\n          </div>\n        );\n      } else {\n        return null;\n      }\n    };\n    return (\n      <div>\n        <ModalDescription toggleModal={this.state.toggleModal} />\n        <header>\n          <nav class=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n            <div class=\"navbar-brand\">\n              <a class=\"navbar-item\" href=\"/ToDo\">\n                <img\n                  alt=\"\"\n                  src=\"https://img.icons8.com/fluent/48/000000/todo-list.png\"\n                />\n              </a>\n              <text class=\"navbar-item\">To-Do</text>\n            </div>\n\n            <div id=\"navbarBasicExample\" class=\"navbar-menu\">\n              <div class=\"navbar-start\"></div>\n            </div>\n\n            <div class=\"navbar-end\">\n              <div class=\"navbar-item \">\n                <a href>\n                  Hi{\" \"}\n                  {localStorage.getItem(\"user_name\") == null\n                    ? \"User\"\n                    : localStorage.getItem(\"user_name\").toUpperCase()}\n                </a>\n              </div>\n              <div class=\"navbar-item\">\n                <div class=\"buttons\">\n                  <button onClick={this.clearAll} class=\"button is-light\">\n                    Log Out\n                  </button>\n                </div>\n              </div>\n            </div>\n          </nav>\n        </header>\n\n        <article class=\"box\">\n          {this.state.responseList.map((elementData) => {\n            return (\n              <ToDoItem\n                todo={elementData}\n                onClickFunction={this.onClickFunction}\n                handleModalDisplay={this.handleModalDisplay}\n              />\n            );\n          })}\n          <div>\n            <textarea\n              class=\"textarea\"\n              placeholder=\"e.g. Hello world\"\n              onChange={this.handleChange}\n            ></textarea>\n          </div>\n          <div class=\"level-right\">\n            <span>\n              <button\n                className=\"button info\"\n                onClick={() => this.onEnterClickAction()}\n              >\n                Save\n              </button>\n            </span>\n          </div>\n        </article>\n      </div>\n    );\n  }\n}\n\nexport default ToDo;\n","import React, { Component } from 'react';\nimport './index.scss';\n// import Loader from 'react-loader-spinner';\nimport APIURLS from '../../api-urls/to-do-api';\n\nexport class LoginPage extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisauth: false,\n\t\t\tchart: null,\n\t\t\tuserName: null,\n\t\t\tisError:false,\n\t\t\terrorMsg:''\n\t\t};\n\n\t\tthis.handleKeyDown = this.handleKeyDown.bind(this);\n\t}\n\tcomponentDidMount() {\n\t\tlocalStorage.clear();\n\t}\n\n\t// componentDidUpdate(prevProps, prevState) {\n\t// \tif (this.props.Token !== null && this.props.Token !== '' && prevProps.Token !== this.props.Token) {\n\t// \t\tthis.props.history.push('/Dashboard/People');\n\t// \t}\n\t// }\n\n\t\n\n\thandleKeyDown(e) {\n\t\tif (e.key === 'Enter') {\n\t\t\tvar userNameNode = document.getElementById('username').value;\n\t\t\tvar userPermNode = document.getElementById('password').value;\n\n\t\t\tif (\n\t\t\t\tuserNameNode !== null &&\n\t\t\t\tuserPermNode !== null &&\n\t\t\t\tuserNameNode.trim() !== '' &&\n\t\t\t\tuserPermNode.trim() !== ''\n\t\t\t) {\n\t\t\t\tvar input = document.getElementById('myInput');\n\n\t\t\t\tinput.addEventListener('keyup', function(event) {\n\t\t\t\t\tif (event.keyCode === 13) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tdocument.getElementById('myBtn').click();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tfetch(APIURLS.V1.validateUser, {\n                    method: 'POST',\n                    mode: 'cors',\n                    headers: {\n                        'Content-Type': 'application/json'\n                        \n                    },\n                    body: JSON.stringify({\n                        \n                            username: userNameNode,\n                            password: userPermNode\n                        \n                    })\n                })\n                    .then((response) => response.json())\n                    .then((json) => {\t\n                        console.log(\"-->\",json)\t\t\t\t\n                        this.setState({\n                            key: json['key']\n                        });\n                        console.log(\"Aya 1\")\n                        if (json['key'] !== undefined) {\n                            console.log(\"Aya 2\")\n                            localStorage.setItem('key', json['key']);\n                            localStorage.setItem('user_name', json['user']['username']);\t\t\t\t\t\t\n                            this.props.history.push('/ToDo');\n                            \n                        } \n                        else \n                        {\n                            this.setState({\n                                isError:true,\n                                errorMsg:\"Please enter valid credentials\"\n                            })\n                        }\n    \n                        \n                    });\n\t\t\t}\n\t\t}\n\t}\n\n\tgetUserDetailsData = () => {\n        console.log(\"-->\")\t\n\t\tvar userNameNode = document.getElementById('username').value;\n\t\tvar userPermNode = document.getElementById('password').value;\n\n\t\tif (\n\t\t\tuserNameNode !== null &&\n\t\t\tuserPermNode !== null &&\n\t\t\tuserNameNode.trim() !== '' &&\n\t\t\tuserPermNode.trim() !== ''\n\t\t) {\n\t\t\tvar input = document.getElementById('myInput');\n\n\t\t\tinput.addEventListener('keyup', function(event) {\n\t\t\t\tif (event.keyCode === 13) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tdocument.getElementById('myBtn').click();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfetch(APIURLS.V1.validateUser, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\tmode: 'cors',\n\t\t\t\theaders: {\n                    'Content-Type': 'application/json'\n                    \n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\n\t\t\t\t\t\tusername: userNameNode,\n\t\t\t\t\t\tpassword: userPermNode\n\t\t\t\t\t\n\t\t\t\t})\n\t\t\t})\n\t\t\t\t.then((response) => response.json())\n\t\t\t\t.then((json) => {\t\n                    console.log(\"-->\",json)\t\t\t\t\n\t\t\t\t\t// this.setState({\n\t\t\t\t\t// \tkey: json['key']\n\t\t\t\t\t// });\n\n\t\t\t\t\tif (json['key'] !== undefined) {\n                        localStorage.setItem('key', json['key']);\n                        localStorage.setItem('user_name', json['user']['username']);\t\t\t\t\t\t\n                        this.props.history.push('/ToDo');\n\t\t\t\t\t} \n\t\t\t\t\telse \n\t\t\t\t\t{\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tisError:true,\n\t\t\t\t\t\t\terrorMsg:\"Please enter valid credentials\"\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\t\n\t\t\t\t});\n\t\t}\n\t};\n\n\trender() {\n\t\tconst LoginBoxContent = () => {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"sufficiency-of-input \">\n\t\t\t\t\t\t<p className=\"heading-font\">To Do Application</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t<div className=\"card-box-margin\">\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<form action=\"\" className=\"box bg-color-box\">\n\t\t\t\t\t\t\t\t\t<div className=\"field\">\n\t\t\t\t\t\t\t\t\t\t<label for=\"\" className=\"label\">\n\t\t\t\t\t\t\t\t\t\t\tUserName\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t<div className=\"control has-icons-left bg-color-box\">\n\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"e.g. username@test.com\"\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"icon is-small is-left\">\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-envelope\" />\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"field\">\n\t\t\t\t\t\t\t\t\t\t<label for=\"\" className=\"label\">\n\t\t\t\t\t\t\t\t\t\t\tPassword\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t<div className=\"control has-icons-left bg-color-box\">\n\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"*******\"\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t\t\tonKeyDown={this.handleKeyDown}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"icon is-small is-left\">\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-lock\" />\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"field\">\n\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\thref\n\t\t\t\t\t\t\t\t\t\t\tid=\"myInput\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"button is-info\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.getUserDetailsData()}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t\t\t\t</a>\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{this.state.isError ? <div className=\"error-msg\">{this.state.errorMsg}</div> : null}\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div />\n\t\t\t\t</div>\n\t\t\t);\n\t\t};\n\t\tif (this.state.isauth === false) {\n\t\t\treturn (\n\t\t\t\t<div className=\"container-fluid home\">\n\t\t\t\t\t<nav className=\"navbar navbar-align nav-home\" role=\"navigation\" aria-label=\"main navigation\">\n\t\t\t\t\t\t<div className=\"navbar-brand\" />\n\t\t\t\t\t</nav>\n\t\t\t\t\t<LoginBoxContent showDetails={this.state.showModal} closeModal={this.toggleAnalyzerModal} />\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\telse\n\t\t{\t\t\n        return \"test\"\t\n\t\t// return<Loader\n\t\t// \t\tclassName=\"loader-display\"\n\t\t// \t\ttype=\"Oval\"\n\t\t// \t\tcolor=\"#001e59\"\n\t\t// \t\theight={100}\n\t\t// \t\twidth={100}\t\t\t\t\n\t\t// \t\tvisible={true}\n\t\t// \t/>\n\t\t}\n\t}\n}\n\n// const mapStateToProps = (state) => {\t\n// \treturn {\n// \t\tUserName: state.LoginDataReducer.UserName,\n// \t\tPassWord: state.LoginDataReducer.passWord,\n// \t\tIsAuthenticated: state.LoginDataReducer.IsAuthenticated,\n// \t\tToken: state.LoginDataReducer.Token\n// \t};\n// };\n\n// const mapDispatchToProps = (dispatch) => {\n// \treturn {\n// \t\tgetUserDetails: (userName, passWord, isauth, token) => {\n// \t\t\tdispatch(credentialAuthenticator(userName, passWord, isauth, token));\n// \t\t}\n// \t};\n// };\n\n// export default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\nexport default LoginPage;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport '../node_modules/font-awesome/css/font-awesome.min.css';\nimport ToDo from './screens/todo'\nimport Login from './screens/login'\n\nclass ErrorBoundary extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { hasError: false };\n\t}\n\n\tstatic getDerivedStateFromError(error) {\n\t\treturn { hasError: true };\n\t}\n\n\trender() {\n\t\tif (this.state.hasError) {\n\t\t\treturn (\n\t\t\t\t<section className=\"hero\">\n\t\t\t\t\t<div className=\"hero-body\">\n\t\t\t\t\t\t<div className=\"container \">\n\t\t\t\t\t\t\t<h1 className=\"title\">Oops! Something went wrong!</h1>\n\t\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\t\tPlease <a href=\"Dashboard/Home\" >Click</a> on this link to go back to the home page and\n\t\t\t\t\t\t\t\tPlease reach out to <a href=\"mailto:nikhil.mandge@test.com\">Nikhil Mandge</a> if the\n\t\t\t\t\t\t\t\tproblem persists after a retry.\n\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t);\n\t\t}\t\t\n\t\treturn this.props.children;\n\t}\n}\n\nconst routing = (\n\t<Router>\n\t\t<ErrorBoundary>\t\t\t\t\t\t\n\t\t\t<Route exact path=\"/\" component={Login} />\t\n\t\t\t<Route exact path=\"/ToDo\" component={ToDo} />\t\t\t\t\t\n\t\t</ErrorBoundary>\n\t</Router>\n);\n\nReactDOM.render(<Provider store={store}>{routing}</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}