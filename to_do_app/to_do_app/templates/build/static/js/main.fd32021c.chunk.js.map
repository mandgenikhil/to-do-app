{"version":3,"sources":["serviceWorker.js","store/index.js","screens/todo/to-do-item.js","api-urls/to-do-api.js","screens/todo/index.js","screens/login/index.js","index.js"],"names":["Boolean","window","location","hostname","match","store","createStore","combineReducers","ToDoItem","props","className","class","title","aria-hidden","onClick","handleModalDisplay","todo","todo_id","todo_data","onClickFunction","created_at","substr","Content","V1","gettodos","savetodos","deletetodo","edittodo","validateUser","ToDo","clearAll","localStorage","clear","history","push","handleChange","event","setState","target","name","value","state","toggleModal","text_data","text_edit_data","responseList","bind","this","prev","getItem","fetch","APIURLS","method","mode","headers","Authorization","then","response","json","key","undefined","isError","errorMsg","document","getElementById","trim","body","JSON","stringify","todo_title","alert","id","placeholder","editToDo","handleEditChange","role","aria-label","href","alt","src","toUpperCase","map","elementData","length","onChange","onEnterClickAction","Component","LoginPage","getUserDetailsData","userNameNode","userPermNode","addEventListener","keyCode","preventDefault","click","username","password","setItem","isauth","chart","userName","handleKeyDown","e","action","for","type","required","onKeyDown","showDetails","showModal","closeModal","toggleAnalyzerModal","ErrorBoundary","hasError","children","error","React","routing","exact","path","component","Login","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fd32021c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\n\t\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import { combineReducers, createStore } from 'redux';\n\nconst store = createStore(\n\tcombineReducers({\t\t\n\t})\n);\n\nexport default store;\n","import React from \"react\";\n\nimport \"./index.scss\";\n\nexport default function ToDoItem(props) {\n  return (\n    <div className=\"todo_div\">\n      <div class=\"notification is-primary\">\n        <i\n          class=\"fa fa-pencil-square-o edit\"\n          title={\"Edit To Do\"}\n          aria-hidden=\"true\"\n          onClick={() =>\n            props.handleModalDisplay(props.todo.todo_id, props.todo.todo_data)\n          }\n        ></i>\n        <button\n          class=\"delete\"\n          onClick={() => props.onClickFunction(props.todo.todo_id)}\n        ></button>\n        {props.todo.todo_data}\n        <p class=\"level-item\"> {props.todo.created_at.substr(0, 16)}</p>\n        {/* <button class=\"button\" onClick={() => props.handleModalDisplay(props.todo.todo_id)}>Edit</button> */}\n      </div>\n    </div>\n  );\n}\n","const Content = {\n\tV1: {\n\t\tgettodos: 'http://localhost:8000/api/v1/to_do',\n\t\tsavetodos: 'http://localhost:8000/api/v1/save_to_do',\n\t\tdeletetodo: 'http://localhost:8000/api/v1/delete_to_do',\t\t\n\t\tedittodo:'http://localhost:8000/api/v1/edit_to_do',\n\t\tvalidateUser: 'http://localhost:8000/rest-auth/login/'\n\t}\n};\n\nexport default Content;\n","import React, { Component } from \"react\";\nimport \"./index.scss\";\nimport ToDoItem from \"./to-do-item\";\nimport APIURLS from \"../../api-urls/to-do-api\";\n\nexport class ToDo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toggleModal: false,\n      todo_id: \"\",\n      text_data: \"\",\n      text_edit_data: \"\",    \n      responseList: [],\n    };\n    this.handleModalDisplay = this.handleModalDisplay.bind(this);\n    this.onClickFunction = this.onClickFunction.bind(this);\n    this.handleModalDisplay = this.handleModalDisplay.bind(this);\n  }\n\n  handleModalDisplay(todo_id, todo_data) {\n    this.setState((prev) => {\n      return {\n        toggleModal: !prev.toggleModal,\n        todo_id: todo_id,\n        text_edit_data: todo_data,\n      };\n    });\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem(\"key\") === null) {\n      this.props.history.push(\"/\");\n      localStorage.clear();\n    } else {\n      fetch(APIURLS.V1.gettodos, {\n        method: \"GET\",\n        mode: \"cors\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Token \" + localStorage.getItem(\"key\"),\n        },\n      })\n        .then((response) => response.json())\n        .then((json) => {\n          this.setState({\n            key: json[\"key\"],\n          });\n          if (json[\"response\"] !== undefined) {\n            this.setState({\n              responseList: json[\"response\"],\n            });\n          } else {\n            this.setState({\n              isError: true,\n              errorMsg: \"Please enter valid credentials\",\n            });\n          }\n        });\n    }\n  }\n\n  clearAll = () => {\n    localStorage.clear();\n    this.props.history.push(\"/\");\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n      text_data: event.target.value,\n    });\n  };\n\n  onClearClickAction() {\n    this.setState({\n      text_data: \" \",\n    });\n  }\n\n  editToDo(todo_id) {\n    var text_edit_data = document.getElementById(\"edit\").value;\n\n    if (text_edit_data !== null && text_edit_data.trim() !== \"\") {\n      fetch(APIURLS.V1.edittodo, {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Token \" + localStorage.getItem(\"key\"),\n        },\n        body: JSON.stringify({\n          todo_id: todo_id,\n          todo_data: text_edit_data,\n        }),\n      })\n        .then((response) => response.json())\n        .then((json) => {\n          if (json[\"response\"] !== undefined) {\n            fetch(APIURLS.V1.gettodos, {\n              method: \"GET\",\n              mode: \"cors\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Token \" + localStorage.getItem(\"key\"),\n              },\n            })\n              .then((response) => response.json())\n              .then((json) => {               \n                if (json[\"response\"] !== undefined) {\n                  this.setState({\n                    responseList: json[\"response\"],\n                  });\n                } else {\n                  this.setState({\n                    isError: true,\n                    errorMsg: \"Please enter valid credentials\",\n                  });\n                }\n              });\n          }\n        });\n\n      this.setState((prev) => {\n        return { toggleModal: !prev.toggleModal, todo_id: \"\" };\n      });\n    }\n  }\n  onEnterClickAction() {\n    if (this.state.text_data !== \"\")\n    {\n      fetch(APIURLS.V1.savetodos, {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Token \" + localStorage.getItem(\"key\"),\n        },\n        body: JSON.stringify({\n          todo_title: \"Test To Do\",\n          todo_data: this.state.text_data,\n        }),\n      })\n        .then((response) => response.json())\n        .then((json) => {\n          if (json[\"response\"] !== undefined) {\n            fetch(APIURLS.V1.gettodos, {\n              method: \"GET\",\n              mode: \"cors\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Token \" + localStorage.getItem(\"key\"),\n              },\n            })\n              .then((response) => response.json())\n              .then((json) => {             \n                if (json[\"response\"] !== undefined) {\n                  this.setState({\n                    responseList: json[\"response\"],\n                  });\n                } else {\n                  this.setState({\n                    isError: true,\n                    errorMsg: \"Please enter valid credentials\",\n                  });\n                }\n              });\n          }\n        });\n\n    }\n    else\n    {\n      alert(\"Please provide your inputs\");\n    }\n    \n  }\n  onClickFunction(todo_id) {\n    if (todo_id !== undefined) {\n      fetch(APIURLS.V1.deletetodo, {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Token \" + localStorage.getItem(\"key\"),\n        },\n        body: JSON.stringify({\n          todo_id: todo_id,\n        }),\n      })\n        .then((response) => response.json())\n        .then((json) => {\n          if (json[\"response\"] !== undefined) {\n            fetch(APIURLS.V1.gettodos, {\n              method: \"GET\",\n              mode: \"cors\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Token \" + localStorage.getItem(\"key\"),\n              },\n            })\n              .then((response) => response.json())\n              .then((json) => {               \n                if (json[\"response\"] !== undefined) {\n                  this.setState({\n                    responseList: json[\"response\"],\n                  });\n                } else {\n                  this.setState({\n                    isError: true,\n                    errorMsg: \"Please enter valid credentials\",\n                  });\n                }\n              });\n          }\n        });\n    }\n  }\n\n  render() {\n    const ModalDescription = (props) => {\n      if (props.toggleModal === true) {\n        return (\n          <div class=\"modal is-active\">\n            <div class=\"modal-background\"></div>\n            <div class=\"modal-card\">\n              <header class=\"modal-card-head\">Please edit your todo</header>\n              <section class=\"modal-card-body\">\n                <textarea\n                  id=\"edit\"\n                  class=\"textarea\"\n                  placeholder={props.text_edit_data}\n                ></textarea>\n                <button\n                  className=\"button info\"\n                  onClick={() => this.editToDo(props.todo_id)}\n                >\n                  Save\n                </button>\n                <button\n                  className=\"button info\"\n                  onClick={() => this.handleModalDisplay()}\n                >\n                  Cancel\n                </button>\n              </section>\n            </div>\n          </div>\n        );\n      } else {\n        return null;\n      }\n    };\n    return (\n      <div>\n        <ModalDescription\n          toggleModal={this.state.toggleModal}\n          handleEditChange={this.handleEditChange}\n          todo_id={this.state.todo_id}\n          text_edit_data={this.state.text_edit_data}\n        />\n        <header>\n          <nav class=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n            <div class=\"navbar-brand\">\n              <a class=\"navbar-item\" href=\"/ToDo\">\n                <img\n                  alt=\"\"\n                  src=\"https://img.icons8.com/fluent/48/000000/todo-list.png\"\n                />\n              </a>\n              <text class=\"navbar-item\">To-Do</text>\n            </div>\n\n            <div id=\"navbarBasicExample\" class=\"navbar-menu\">\n              <div class=\"navbar-start\"></div>\n            </div>\n\n            <div class=\"navbar-end\">\n              <div class=\"navbar-item \">\n                <a href>\n                  Hi{\" \"}\n                  {localStorage.getItem(\"user_name\") == null\n                    ? \"User\"\n                    : localStorage.getItem(\"user_name\").toUpperCase()}\n                </a>\n              </div>\n              <div class=\"navbar-item\">\n                <div class=\"buttons\">\n                  <button onClick={this.clearAll} class=\"button is-light\">\n                    Log Out\n                  </button>\n                </div>\n              </div>\n            </div>\n          </nav>\n        </header>\n\n        <div id = \"div_1\" class=\"div_1\">\n        \n          {this.state.responseList.map((elementData) => {\n            return (\n              <ToDoItem\n                todo={elementData}\n                onClickFunction={this.onClickFunction}\n                handleModalDisplay={this.handleModalDisplay}\n              />\n            );\n          })}\n          {this.state.responseList.length === 0 ? \n          <div className=\"center is-size-1-touch\">\n            Your To-Do List Is Empty, Please add your To-Do's\n\n            </div>\n            : null\n          }\n           \n          </div>\n       \n          <div id = \"div_2\" className=\"div_2\">\n            <textarea\n              class=\"textarea\"\n              placeholder=\"Please write your todo here\"\n              onChange={this.handleChange}\n            ></textarea>\n              <div class=\"level-right\">\n            <span>\n              <button\n                className=\"button info\"\n                onClick={() => this.onEnterClickAction()}\n              >\n                Save\n              </button>\n            </span>\n          </div>\n          </div>\n        \n       \n      </div>\n    );\n  }\n}\n\nexport default ToDo;\n","import React, { Component } from \"react\";\nimport \"./index.scss\";\nimport APIURLS from \"../../api-urls/to-do-api\";\n\nexport class LoginPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isauth: false,\n      chart: null,\n      userName: null,\n      isError: false,\n      errorMsg: \"\",\n    };\n\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n  componentDidMount() {\n    localStorage.clear();\n  }\n\n  handleKeyDown(e) {\n    if (e.key === \"Enter\") {\n      var userNameNode = document.getElementById(\"username\").value;\n      var userPermNode = document.getElementById(\"password\").value;\n\n      if (\n        userNameNode !== null &&\n        userPermNode !== null &&\n        userNameNode.trim() !== \"\" &&\n        userPermNode.trim() !== \"\"\n      ) {\n        var input = document.getElementById(\"myInput\");\n\n        input.addEventListener(\"keyup\", function (event) {\n          if (event.keyCode === 13) {\n            event.preventDefault();\n            document.getElementById(\"myBtn\").click();\n          }\n        });\n\n        fetch(APIURLS.V1.validateUser, {\n          method: \"POST\",\n          mode: \"cors\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            username: userNameNode,\n            password: userPermNode,\n          }),\n        })\n          .then((response) => response.json())\n          .then((json) => {\n            this.setState({\n              key: json[\"key\"],\n            });\n            if (json[\"key\"] !== undefined) {\n              localStorage.setItem(\"key\", json[\"key\"]);\n              localStorage.setItem(\"user_name\", json[\"user\"][\"username\"]);\n              this.props.history.push(\"/ToDo\");\n            } else {\n              this.setState({\n                isError: true,\n                errorMsg: \"Please enter valid credentials\",\n              });\n            }\n          });\n      }\n    }\n  }\n\n  getUserDetailsData = () => {\n    var userNameNode = document.getElementById(\"username\").value;\n    var userPermNode = document.getElementById(\"password\").value;\n\n    if (\n      userNameNode !== null &&\n      userPermNode !== null &&\n      userNameNode.trim() !== \"\" &&\n      userPermNode.trim() !== \"\"\n    ) {\n      var input = document.getElementById(\"myInput\");\n\n      input.addEventListener(\"keyup\", function (event) {\n        if (event.keyCode === 13) {\n          event.preventDefault();\n          document.getElementById(\"myBtn\").click();\n        }\n      });\n\n      fetch(APIURLS.V1.validateUser, {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          username: userNameNode,\n          password: userPermNode,\n        }),\n      })\n        .then((response) => response.json())\n        .then((json) => {\n          if (json[\"key\"] !== undefined) {\n            localStorage.setItem(\"key\", json[\"key\"]);\n            localStorage.setItem(\"user_name\", json[\"user\"][\"username\"]);\n            this.props.history.push(\"/ToDo\");\n          } else {\n            this.setState({\n              isError: true,\n              errorMsg: \"Please enter valid credentials\",\n            });\n          }\n        });\n    }\n  };\n\n  render() {\n    const LoginBoxContent = () => {\n      return (\n        <div>\n          <div className=\"sufficiency-of-input \">\n            <p className=\"heading-font\">To Do Application</p>\n          </div>\n          <div>\n            {\" \"}\n            <div className=\"card-box-margin\">\n              <div>\n                <form action=\"\" className=\"box bg-color-box\">\n                  <div className=\"field\">\n                    <label for=\"\" className=\"label\">\n                      UserName\n                    </label>\n                    <div className=\"control has-icons-left bg-color-box\">\n                      <input\n                        id=\"username\"\n                        type=\"email\"\n                        placeholder=\"e.g. username@test.com\"\n                        className=\"input\"\n                      />\n                      <span className=\"icon is-small is-left\">\n                        <i className=\"fa fa-envelope\" />\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"field\">\n                    <label for=\"\" className=\"label\">\n                      Password\n                    </label>\n                    <div className=\"control has-icons-left bg-color-box\">\n                      <input\n                        id=\"password\"\n                        type=\"password\"\n                        placeholder=\"*******\"\n                        className=\"input\"\n                        required\n                        onKeyDown={this.handleKeyDown}\n                      />\n                      <span className=\"icon is-small is-left\">\n                        <i className=\"fa fa-lock\" />\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"field\">\n                    <a\n                      href\n                      id=\"myInput\"\n                      className=\"button is-info\"\n                      onClick={() => this.getUserDetailsData()}\n                    >\n                      Login\n                    </a>\n                  </div>\n                  {this.state.isError ? (\n                    <div className=\"error-msg\">{this.state.errorMsg}</div>\n                  ) : null}\n                </form>\n              </div>\n            </div>\n          </div>\n          <div />\n        </div>\n      );\n    };\n    if (this.state.isauth === false) {\n      return (\n        <div className=\"container-fluid home\">\n          <nav\n            className=\"navbar navbar-align nav-home\"\n            role=\"navigation\"\n            aria-label=\"main navigation\"\n          >\n            <div className=\"navbar-brand\" />\n          </nav>\n          <LoginBoxContent\n            showDetails={this.state.showModal}\n            closeModal={this.toggleAnalyzerModal}\n          />\n        </div>\n      );\n    } else {\n      return null\n    }\n  }\n}\n\nexport default LoginPage;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport '../node_modules/font-awesome/css/font-awesome.min.css';\nimport ToDo from './screens/todo'\nimport Login from './screens/login'\n\nclass ErrorBoundary extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { hasError: false };\n\t}\n\n\tstatic getDerivedStateFromError(error) {\n\t\treturn { hasError: true };\n\t}\n\n\trender() {\n\t\tif (this.state.hasError) {\n\t\t\treturn (\n\t\t\t\t<section className=\"hero\">\n\t\t\t\t\t<div className=\"hero-body\">\n\t\t\t\t\t\t<div className=\"container \">\n\t\t\t\t\t\t\t<h1 className=\"title\">Oops! Something went wrong!</h1>\n\t\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\t\tPlease <a href=\"Dashboard/Home\" >Click</a> on this link to go back to the home page and\n\t\t\t\t\t\t\t\tPlease reach out to <a href=\"mailto:nikhil.mandge@test.com\">Nikhil Mandge</a> if the\n\t\t\t\t\t\t\t\tproblem persists after a retry.\n\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t);\n\t\t}\t\t\n\t\treturn this.props.children;\n\t}\n}\n\nconst routing = (\n\t<Router>\n\t\t<ErrorBoundary>\t\t\t\t\t\t\n\t\t\t<Route exact path=\"/\" component={Login} />\t\n\t\t\t<Route exact path=\"/ToDo\" component={ToDo} />\t\t\t\t\t\n\t\t</ErrorBoundary>\n\t</Router>\n);\n\nReactDOM.render(<Provider store={store}>{routing}</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}