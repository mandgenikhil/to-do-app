{"ast":null,"code":"var _jsxFileName = \"/home/nmandge/projetcs/to-do-app/to_do_app/to_do_app/templates/src/screens/todo/index.js\";\nimport React, { Component } from \"react\";\nimport \"./index.scss\";\nimport ToDoItem from \"./to-do-item\";\nimport APIURLS from \"../../api-urls/to-do-api\";\nexport class ToDo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.clearAll = () => {\n      localStorage.clear();\n      this.props.history.push(\"/\");\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value,\n        text_data: event.target.value\n      });\n    };\n\n    this.state = {\n      toggleModal: false,\n      todo_id: \"\",\n      text_data: \"\",\n      text_edit_data: \"\",\n      responseList: []\n    };\n    this.handleModalDisplay = this.handleModalDisplay.bind(this);\n    this.onClickFunction = this.onClickFunction.bind(this);\n    this.handleModalDisplay = this.handleModalDisplay.bind(this);\n  }\n\n  handleModalDisplay(todo_id, todo_data) {\n    this.setState(prev => {\n      return {\n        toggleModal: !prev.toggleModal,\n        todo_id: todo_id,\n        text_edit_data: todo_data\n      };\n    });\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem(\"key\") === null) {\n      this.props.history.push(\"/\");\n      localStorage.clear();\n    } else {\n      fetch(APIURLS.V1.gettodos, {\n        method: \"GET\",\n        mode: \"cors\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Token \" + localStorage.getItem(\"key\")\n        }\n      }).then(response => response.json()).then(json => {\n        this.setState({\n          key: json[\"key\"]\n        });\n\n        if (json[\"response\"] !== undefined) {\n          this.setState({\n            responseList: json[\"response\"]\n          });\n        } else {\n          this.setState({\n            isError: true,\n            errorMsg: \"Please enter valid credentials\"\n          });\n        }\n      });\n    }\n  }\n\n  onClearClickAction() {\n    this.setState({\n      text_data: \" \"\n    });\n  }\n\n  editToDo(todo_id) {\n    var text_edit_data = document.getElementById(\"edit\").value;\n\n    if (text_edit_data !== null && text_edit_data.trim() !== \"\") {\n      fetch(APIURLS.V1.edittodo, {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Token \" + localStorage.getItem(\"key\")\n        },\n        body: JSON.stringify({\n          todo_id: todo_id,\n          todo_data: text_edit_data\n        })\n      }).then(response => response.json()).then(json => {\n        if (json[\"response\"] !== undefined) {\n          fetch(APIURLS.V1.gettodos, {\n            method: \"GET\",\n            mode: \"cors\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: \"Token \" + localStorage.getItem(\"key\")\n            }\n          }).then(response => response.json()).then(json => {\n            if (json[\"response\"] !== undefined) {\n              this.setState({\n                responseList: json[\"response\"]\n              });\n            } else {\n              this.setState({\n                isError: true,\n                errorMsg: \"Please enter valid credentials\"\n              });\n            }\n          });\n        }\n      });\n      this.setState(prev => {\n        return {\n          toggleModal: !prev.toggleModal,\n          todo_id: \"\"\n        };\n      });\n    }\n  }\n\n  onEnterClickAction() {\n    fetch(APIURLS.V1.savetodos, {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Token \" + localStorage.getItem(\"key\")\n      },\n      body: JSON.stringify({\n        todo_title: \"Test To Do\",\n        todo_data: this.state.text_data\n      })\n    }).then(response => response.json()).then(json => {\n      if (json[\"response\"] !== undefined) {\n        fetch(APIURLS.V1.gettodos, {\n          method: \"GET\",\n          mode: \"cors\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"Token \" + localStorage.getItem(\"key\")\n          }\n        }).then(response => response.json()).then(json => {\n          if (json[\"response\"] !== undefined) {\n            this.setState({\n              responseList: json[\"response\"]\n            });\n          } else {\n            this.setState({\n              isError: true,\n              errorMsg: \"Please enter valid credentials\"\n            });\n          }\n        });\n      }\n    });\n  }\n\n  onClickFunction(todo_id) {\n    if (todo_id !== undefined) {\n      fetch(APIURLS.V1.deletetodo, {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Token \" + localStorage.getItem(\"key\")\n        },\n        body: JSON.stringify({\n          todo_id: todo_id\n        })\n      }).then(response => response.json()).then(json => {\n        if (json[\"response\"] !== undefined) {\n          fetch(APIURLS.V1.gettodos, {\n            method: \"GET\",\n            mode: \"cors\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: \"Token \" + localStorage.getItem(\"key\")\n            }\n          }).then(response => response.json()).then(json => {\n            if (json[\"response\"] !== undefined) {\n              this.setState({\n                responseList: json[\"response\"]\n              });\n            } else {\n              this.setState({\n                isError: true,\n                errorMsg: \"Please enter valid credentials\"\n              });\n            }\n          });\n        }\n      });\n    }\n  }\n\n  render() {\n    const ModalDescription = props => {\n      if (props.toggleModal === true) {\n        return React.createElement(\"div\", {\n          class: \"modal is-active\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"modal-background\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          class: \"modal-card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }, React.createElement(\"header\", {\n          class: \"modal-card-head\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        }, \"Please edit your todo\"), React.createElement(\"section\", {\n          class: \"modal-card-body\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }, React.createElement(\"textarea\", {\n          id: \"edit\",\n          class: \"textarea\",\n          placeholder: props.text_edit_data,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          className: \"button info\",\n          onClick: () => this.editToDo(props.todo_id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        }, \"Save\"), React.createElement(\"button\", {\n          className: \"button info\",\n          onClick: () => this.handleModalDisplay(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }, \"Cancel\"))));\n      } else {\n        return null;\n      }\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(ModalDescription, {\n      toggleModal: this.state.toggleModal,\n      handleEditChange: this.handleEditChange,\n      todo_id: this.state.todo_id,\n      text_edit_data: this.state.text_edit_data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }), React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      class: \"navbar\",\n      role: \"navigation\",\n      \"aria-label\": \"main navigation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"navbar-brand\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      class: \"navbar-item\",\n      href: \"/ToDo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"\",\n      src: \"https://img.icons8.com/fluent/48/000000/todo-list.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    })), React.createElement(\"text\", {\n      class: \"navbar-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \"To-Do\")), React.createElement(\"div\", {\n      id: \"navbarBasicExample\",\n      class: \"navbar-menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"navbar-start\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"navbar-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"navbar-item \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, \"Hi\", \" \", localStorage.getItem(\"user_name\") == null ? \"User\" : localStorage.getItem(\"user_name\").toUpperCase())), React.createElement(\"div\", {\n      class: \"navbar-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.clearAll,\n      class: \"button is-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, \"Log Out\")))))), React.createElement(\"div\", {\n      id: \"div_1\",\n      class: \"div_1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, this.state.responseList.map(elementData => {\n      return React.createElement(ToDoItem, {\n        todo: elementData,\n        onClickFunction: this.onClickFunction,\n        handleModalDisplay: this.handleModalDisplay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      });\n    }), this.state.responseList.length === 0 ? React.createElement(\"div\", {\n      className: \"center is-size-1-desktop\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \"Your To-Do List Is Empty, Please add your To-Do's\") : null), React.createElement(\"div\", {\n      id: \"div_2\",\n      className: \"div_2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      class: \"textarea\",\n      placeholder: \"Please write your todo here\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"level-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button info\",\n      onClick: () => this.onEnterClickAction(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, \"Save\")))));\n  }\n\n}\nexport default ToDo;","map":{"version":3,"sources":["/home/nmandge/projetcs/to-do-app/to_do_app/to_do_app/templates/src/screens/todo/index.js"],"names":["React","Component","ToDoItem","APIURLS","ToDo","constructor","props","clearAll","localStorage","clear","history","push","handleChange","event","setState","target","name","value","text_data","state","toggleModal","todo_id","text_edit_data","responseList","handleModalDisplay","bind","onClickFunction","todo_data","prev","componentDidMount","getItem","fetch","V1","gettodos","method","mode","headers","Authorization","then","response","json","key","undefined","isError","errorMsg","onClearClickAction","editToDo","document","getElementById","trim","edittodo","body","JSON","stringify","onEnterClickAction","savetodos","todo_title","deletetodo","render","ModalDescription","handleEditChange","toUpperCase","map","elementData","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,cAAP;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AAEA,OAAO,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAClCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAwDnBC,QAxDmB,GAwDR,MAAM;AACfC,MAAAA,YAAY,CAACC,KAAb;AACA,WAAKH,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD,KA3DkB;;AAAA,SA6DnBC,YA7DmB,GA6DHC,KAAD,IAAW;AACxB,WAAKC,QAAL,CAAc;AACZ,SAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE,KADtB;AAEZC,QAAAA,SAAS,EAAEL,KAAK,CAACE,MAAN,CAAaE;AAFZ,OAAd;AAID,KAlEkB;;AAEjB,SAAKE,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,KADF;AAEXC,MAAAA,OAAO,EAAE,EAFE;AAGXH,MAAAA,SAAS,EAAE,EAHA;AAIXI,MAAAA,cAAc,EAAE,EAJL;AAKXC,MAAAA,YAAY,EAAE;AALH,KAAb;AAOA,SAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBD,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKD,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAA1B;AACD;;AAEDD,EAAAA,kBAAkB,CAACH,OAAD,EAAUM,SAAV,EAAqB;AACrC,SAAKb,QAAL,CAAec,IAAD,IAAU;AACtB,aAAO;AACLR,QAAAA,WAAW,EAAE,CAACQ,IAAI,CAACR,WADd;AAELC,QAAAA,OAAO,EAAEA,OAFJ;AAGLC,QAAAA,cAAc,EAAEK;AAHX,OAAP;AAKD,KAND;AAOD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,QAAIrB,YAAY,CAACsB,OAAb,CAAqB,KAArB,MAAgC,IAApC,EAA0C;AACxC,WAAKxB,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACAH,MAAAA,YAAY,CAACC,KAAb;AACD,KAHD,MAGO;AACLsB,MAAAA,KAAK,CAAC5B,OAAO,CAAC6B,EAAR,CAAWC,QAAZ,EAAsB;AACzBC,QAAAA,MAAM,EAAE,KADiB;AAEzBC,QAAAA,IAAI,EAAE,MAFmB;AAGzBC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,aAAa,EAAE,WAAW7B,YAAY,CAACsB,OAAb,CAAqB,KAArB;AAFnB;AAHgB,OAAtB,CAAL,CAQGQ,IARH,CAQSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EARtB,EASGF,IATH,CASSE,IAAD,IAAU;AACd,aAAK1B,QAAL,CAAc;AACZ2B,UAAAA,GAAG,EAAED,IAAI,CAAC,KAAD;AADG,SAAd;;AAGA,YAAIA,IAAI,CAAC,UAAD,CAAJ,KAAqBE,SAAzB,EAAoC;AAClC,eAAK5B,QAAL,CAAc;AACZS,YAAAA,YAAY,EAAEiB,IAAI,CAAC,UAAD;AADN,WAAd;AAGD,SAJD,MAIO;AACL,eAAK1B,QAAL,CAAc;AACZ6B,YAAAA,OAAO,EAAE,IADG;AAEZC,YAAAA,QAAQ,EAAE;AAFE,WAAd;AAID;AACF,OAvBH;AAwBD;AACF;;AAcDC,EAAAA,kBAAkB,GAAG;AACnB,SAAK/B,QAAL,CAAc;AACZI,MAAAA,SAAS,EAAE;AADC,KAAd;AAGD;;AAED4B,EAAAA,QAAQ,CAACzB,OAAD,EAAU;AAChB,QAAIC,cAAc,GAAGyB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgC/B,KAArD;;AAEA,QAAIK,cAAc,KAAK,IAAnB,IAA2BA,cAAc,CAAC2B,IAAf,OAA0B,EAAzD,EAA6D;AAC3DlB,MAAAA,KAAK,CAAC5B,OAAO,CAAC6B,EAAR,CAAWkB,QAAZ,EAAsB;AACzBhB,QAAAA,MAAM,EAAE,MADiB;AAEzBC,QAAAA,IAAI,EAAE,MAFmB;AAGzBC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,aAAa,EAAE,WAAW7B,YAAY,CAACsB,OAAb,CAAqB,KAArB;AAFnB,SAHgB;AAOzBqB,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBhC,UAAAA,OAAO,EAAEA,OADU;AAEnBM,UAAAA,SAAS,EAAEL;AAFQ,SAAf;AAPmB,OAAtB,CAAL,CAYGgB,IAZH,CAYSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAZtB,EAaGF,IAbH,CAaSE,IAAD,IAAU;AACd,YAAIA,IAAI,CAAC,UAAD,CAAJ,KAAqBE,SAAzB,EAAoC;AAClCX,UAAAA,KAAK,CAAC5B,OAAO,CAAC6B,EAAR,CAAWC,QAAZ,EAAsB;AACzBC,YAAAA,MAAM,EAAE,KADiB;AAEzBC,YAAAA,IAAI,EAAE,MAFmB;AAGzBC,YAAAA,OAAO,EAAE;AACP,8BAAgB,kBADT;AAEPC,cAAAA,aAAa,EAAE,WAAW7B,YAAY,CAACsB,OAAb,CAAqB,KAArB;AAFnB;AAHgB,WAAtB,CAAL,CAQGQ,IARH,CAQSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EARtB,EASGF,IATH,CASSE,IAAD,IAAU;AACd,gBAAIA,IAAI,CAAC,UAAD,CAAJ,KAAqBE,SAAzB,EAAoC;AAClC,mBAAK5B,QAAL,CAAc;AACZS,gBAAAA,YAAY,EAAEiB,IAAI,CAAC,UAAD;AADN,eAAd;AAGD,aAJD,MAIO;AACL,mBAAK1B,QAAL,CAAc;AACZ6B,gBAAAA,OAAO,EAAE,IADG;AAEZC,gBAAAA,QAAQ,EAAE;AAFE,eAAd;AAID;AACF,WApBH;AAqBD;AACF,OArCH;AAuCA,WAAK9B,QAAL,CAAec,IAAD,IAAU;AACtB,eAAO;AAAER,UAAAA,WAAW,EAAE,CAACQ,IAAI,CAACR,WAArB;AAAkCC,UAAAA,OAAO,EAAE;AAA3C,SAAP;AACD,OAFD;AAGD;AACF;;AACDiC,EAAAA,kBAAkB,GAAG;AACnBvB,IAAAA,KAAK,CAAC5B,OAAO,CAAC6B,EAAR,CAAWuB,SAAZ,EAAuB;AAC1BrB,MAAAA,MAAM,EAAE,MADkB;AAE1BC,MAAAA,IAAI,EAAE,MAFoB;AAG1BC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAE,WAAW7B,YAAY,CAACsB,OAAb,CAAqB,KAArB;AAFnB,OAHiB;AAO1BqB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBG,QAAAA,UAAU,EAAE,YADO;AAEnB7B,QAAAA,SAAS,EAAE,KAAKR,KAAL,CAAWD;AAFH,OAAf;AAPoB,KAAvB,CAAL,CAYGoB,IAZH,CAYSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAZtB,EAaGF,IAbH,CAaSE,IAAD,IAAU;AACd,UAAIA,IAAI,CAAC,UAAD,CAAJ,KAAqBE,SAAzB,EAAoC;AAClCX,QAAAA,KAAK,CAAC5B,OAAO,CAAC6B,EAAR,CAAWC,QAAZ,EAAsB;AACzBC,UAAAA,MAAM,EAAE,KADiB;AAEzBC,UAAAA,IAAI,EAAE,MAFmB;AAGzBC,UAAAA,OAAO,EAAE;AACP,4BAAgB,kBADT;AAEPC,YAAAA,aAAa,EAAE,WAAW7B,YAAY,CAACsB,OAAb,CAAqB,KAArB;AAFnB;AAHgB,SAAtB,CAAL,CAQGQ,IARH,CAQSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EARtB,EASGF,IATH,CASSE,IAAD,IAAU;AACd,cAAIA,IAAI,CAAC,UAAD,CAAJ,KAAqBE,SAAzB,EAAoC;AAClC,iBAAK5B,QAAL,CAAc;AACZS,cAAAA,YAAY,EAAEiB,IAAI,CAAC,UAAD;AADN,aAAd;AAGD,WAJD,MAIO;AACL,iBAAK1B,QAAL,CAAc;AACZ6B,cAAAA,OAAO,EAAE,IADG;AAEZC,cAAAA,QAAQ,EAAE;AAFE,aAAd;AAID;AACF,SApBH;AAqBD;AACF,KArCH;AAsCD;;AACDlB,EAAAA,eAAe,CAACL,OAAD,EAAU;AACvB,QAAIA,OAAO,KAAKqB,SAAhB,EAA2B;AACzBX,MAAAA,KAAK,CAAC5B,OAAO,CAAC6B,EAAR,CAAWyB,UAAZ,EAAwB;AAC3BvB,QAAAA,MAAM,EAAE,MADmB;AAE3BC,QAAAA,IAAI,EAAE,MAFqB;AAG3BC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,aAAa,EAAE,WAAW7B,YAAY,CAACsB,OAAb,CAAqB,KAArB;AAFnB,SAHkB;AAO3BqB,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBhC,UAAAA,OAAO,EAAEA;AADU,SAAf;AAPqB,OAAxB,CAAL,CAWGiB,IAXH,CAWSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAXtB,EAYGF,IAZH,CAYSE,IAAD,IAAU;AACd,YAAIA,IAAI,CAAC,UAAD,CAAJ,KAAqBE,SAAzB,EAAoC;AAClCX,UAAAA,KAAK,CAAC5B,OAAO,CAAC6B,EAAR,CAAWC,QAAZ,EAAsB;AACzBC,YAAAA,MAAM,EAAE,KADiB;AAEzBC,YAAAA,IAAI,EAAE,MAFmB;AAGzBC,YAAAA,OAAO,EAAE;AACP,8BAAgB,kBADT;AAEPC,cAAAA,aAAa,EAAE,WAAW7B,YAAY,CAACsB,OAAb,CAAqB,KAArB;AAFnB;AAHgB,WAAtB,CAAL,CAQGQ,IARH,CAQSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EARtB,EASGF,IATH,CASSE,IAAD,IAAU;AACd,gBAAIA,IAAI,CAAC,UAAD,CAAJ,KAAqBE,SAAzB,EAAoC;AAClC,mBAAK5B,QAAL,CAAc;AACZS,gBAAAA,YAAY,EAAEiB,IAAI,CAAC,UAAD;AADN,eAAd;AAGD,aAJD,MAIO;AACL,mBAAK1B,QAAL,CAAc;AACZ6B,gBAAAA,OAAO,EAAE,IADG;AAEZC,gBAAAA,QAAQ,EAAE;AAFE,eAAd;AAID;AACF,WApBH;AAqBD;AACF,OApCH;AAqCD;AACF;;AAEDc,EAAAA,MAAM,GAAG;AACP,UAAMC,gBAAgB,GAAIrD,KAAD,IAAW;AAClC,UAAIA,KAAK,CAACc,WAAN,KAAsB,IAA1B,EAAgC;AAC9B,eACE;AAAK,UAAA,KAAK,EAAC,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,KAAK,EAAC,kBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAK,UAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAQ,UAAA,KAAK,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,EAEE;AAAS,UAAA,KAAK,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AACE,UAAA,EAAE,EAAC,MADL;AAEE,UAAA,KAAK,EAAC,UAFR;AAGE,UAAA,WAAW,EAAEd,KAAK,CAACgB,cAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAME;AACE,UAAA,SAAS,EAAC,aADZ;AAEE,UAAA,OAAO,EAAE,MAAM,KAAKwB,QAAL,CAAcxC,KAAK,CAACe,OAApB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,EAYE;AACE,UAAA,SAAS,EAAC,aADZ;AAEE,UAAA,OAAO,EAAE,MAAM,KAAKG,kBAAL,EAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZF,CAFF,CAFF,CADF;AA2BD,OA5BD,MA4BO;AACL,eAAO,IAAP;AACD;AACF,KAhCD;;AAiCA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,gBAAD;AACE,MAAA,WAAW,EAAE,KAAKL,KAAL,CAAWC,WAD1B;AAEE,MAAA,gBAAgB,EAAE,KAAKwC,gBAFzB;AAGE,MAAA,OAAO,EAAE,KAAKzC,KAAL,CAAWE,OAHtB;AAIE,MAAA,cAAc,EAAE,KAAKF,KAAL,CAAWG,cAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAC,QAAX;AAAoB,MAAA,IAAI,EAAC,YAAzB;AAAsC,oBAAW,iBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,KAAK,EAAC,aAAT;AAAuB,MAAA,IAAI,EAAC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,GAAG,EAAC,EADN;AAEE,MAAA,GAAG,EAAC,uDAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAOE;AAAM,MAAA,KAAK,EAAC,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPF,CADF,EAWE;AAAK,MAAA,EAAE,EAAC,oBAAR;AAA6B,MAAA,KAAK,EAAC,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAXF,EAeE;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,IAAI,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACK,GADL,EAEGd,YAAY,CAACsB,OAAb,CAAqB,WAArB,KAAqC,IAArC,GACG,MADH,GAEGtB,YAAY,CAACsB,OAAb,CAAqB,WAArB,EAAkC+B,WAAlC,EAJN,CADF,CADF,EASE;AAAK,MAAA,KAAK,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,KAAKtD,QAAtB;AAAgC,MAAA,KAAK,EAAC,iBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,CATF,CAfF,CADF,CAPF,EA2CE;AAAK,MAAA,EAAE,EAAG,OAAV;AAAkB,MAAA,KAAK,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG,KAAKY,KAAL,CAAWI,YAAX,CAAwBuC,GAAxB,CAA6BC,WAAD,IAAiB;AAC5C,aACE,oBAAC,QAAD;AACE,QAAA,IAAI,EAAEA,WADR;AAEE,QAAA,eAAe,EAAE,KAAKrC,eAFxB;AAGE,QAAA,kBAAkB,EAAE,KAAKF,kBAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD,KARA,CAFH,EAWG,KAAKL,KAAL,CAAWI,YAAX,CAAwByC,MAAxB,KAAmC,CAAnC,GACD;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DADC,GAKG,IAhBN,CA3CF,EAgEI;AAAK,MAAA,EAAE,EAAG,OAAV;AAAkB,MAAA,SAAS,EAAC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,KAAK,EAAC,UADR;AAEE,MAAA,WAAW,EAAC,6BAFd;AAGE,MAAA,QAAQ,EAAE,KAAKpD,YAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAMI;AAAK,MAAA,KAAK,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,aADZ;AAEE,MAAA,OAAO,EAAE,MAAM,KAAK0C,kBAAL,EAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADE,CANJ,CAhEJ,CADF;AAsFD;;AArUiC;AAwUpC,eAAelD,IAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./index.scss\";\nimport ToDoItem from \"./to-do-item\";\nimport APIURLS from \"../../api-urls/to-do-api\";\n\nexport class ToDo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toggleModal: false,\n      todo_id: \"\",\n      text_data: \"\",\n      text_edit_data: \"\",    \n      responseList: [],\n    };\n    this.handleModalDisplay = this.handleModalDisplay.bind(this);\n    this.onClickFunction = this.onClickFunction.bind(this);\n    this.handleModalDisplay = this.handleModalDisplay.bind(this);\n  }\n\n  handleModalDisplay(todo_id, todo_data) {\n    this.setState((prev) => {\n      return {\n        toggleModal: !prev.toggleModal,\n        todo_id: todo_id,\n        text_edit_data: todo_data,\n      };\n    });\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem(\"key\") === null) {\n      this.props.history.push(\"/\");\n      localStorage.clear();\n    } else {\n      fetch(APIURLS.V1.gettodos, {\n        method: \"GET\",\n        mode: \"cors\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Token \" + localStorage.getItem(\"key\"),\n        },\n      })\n        .then((response) => response.json())\n        .then((json) => {\n          this.setState({\n            key: json[\"key\"],\n          });\n          if (json[\"response\"] !== undefined) {\n            this.setState({\n              responseList: json[\"response\"],\n            });\n          } else {\n            this.setState({\n              isError: true,\n              errorMsg: \"Please enter valid credentials\",\n            });\n          }\n        });\n    }\n  }\n\n  clearAll = () => {\n    localStorage.clear();\n    this.props.history.push(\"/\");\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n      text_data: event.target.value,\n    });\n  };\n\n  onClearClickAction() {\n    this.setState({\n      text_data: \" \",\n    });\n  }\n\n  editToDo(todo_id) {\n    var text_edit_data = document.getElementById(\"edit\").value;\n\n    if (text_edit_data !== null && text_edit_data.trim() !== \"\") {\n      fetch(APIURLS.V1.edittodo, {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Token \" + localStorage.getItem(\"key\"),\n        },\n        body: JSON.stringify({\n          todo_id: todo_id,\n          todo_data: text_edit_data,\n        }),\n      })\n        .then((response) => response.json())\n        .then((json) => {\n          if (json[\"response\"] !== undefined) {\n            fetch(APIURLS.V1.gettodos, {\n              method: \"GET\",\n              mode: \"cors\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Token \" + localStorage.getItem(\"key\"),\n              },\n            })\n              .then((response) => response.json())\n              .then((json) => {               \n                if (json[\"response\"] !== undefined) {\n                  this.setState({\n                    responseList: json[\"response\"],\n                  });\n                } else {\n                  this.setState({\n                    isError: true,\n                    errorMsg: \"Please enter valid credentials\",\n                  });\n                }\n              });\n          }\n        });\n\n      this.setState((prev) => {\n        return { toggleModal: !prev.toggleModal, todo_id: \"\" };\n      });\n    }\n  }\n  onEnterClickAction() {\n    fetch(APIURLS.V1.savetodos, {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Token \" + localStorage.getItem(\"key\"),\n      },\n      body: JSON.stringify({\n        todo_title: \"Test To Do\",\n        todo_data: this.state.text_data,\n      }),\n    })\n      .then((response) => response.json())\n      .then((json) => {\n        if (json[\"response\"] !== undefined) {\n          fetch(APIURLS.V1.gettodos, {\n            method: \"GET\",\n            mode: \"cors\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: \"Token \" + localStorage.getItem(\"key\"),\n            },\n          })\n            .then((response) => response.json())\n            .then((json) => {             \n              if (json[\"response\"] !== undefined) {\n                this.setState({\n                  responseList: json[\"response\"],\n                });\n              } else {\n                this.setState({\n                  isError: true,\n                  errorMsg: \"Please enter valid credentials\",\n                });\n              }\n            });\n        }\n      });\n  }\n  onClickFunction(todo_id) {\n    if (todo_id !== undefined) {\n      fetch(APIURLS.V1.deletetodo, {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Token \" + localStorage.getItem(\"key\"),\n        },\n        body: JSON.stringify({\n          todo_id: todo_id,\n        }),\n      })\n        .then((response) => response.json())\n        .then((json) => {\n          if (json[\"response\"] !== undefined) {\n            fetch(APIURLS.V1.gettodos, {\n              method: \"GET\",\n              mode: \"cors\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Token \" + localStorage.getItem(\"key\"),\n              },\n            })\n              .then((response) => response.json())\n              .then((json) => {               \n                if (json[\"response\"] !== undefined) {\n                  this.setState({\n                    responseList: json[\"response\"],\n                  });\n                } else {\n                  this.setState({\n                    isError: true,\n                    errorMsg: \"Please enter valid credentials\",\n                  });\n                }\n              });\n          }\n        });\n    }\n  }\n\n  render() {\n    const ModalDescription = (props) => {\n      if (props.toggleModal === true) {\n        return (\n          <div class=\"modal is-active\">\n            <div class=\"modal-background\"></div>\n            <div class=\"modal-card\">\n              <header class=\"modal-card-head\">Please edit your todo</header>\n              <section class=\"modal-card-body\">\n                <textarea\n                  id=\"edit\"\n                  class=\"textarea\"\n                  placeholder={props.text_edit_data}\n                ></textarea>\n                <button\n                  className=\"button info\"\n                  onClick={() => this.editToDo(props.todo_id)}\n                >\n                  Save\n                </button>\n                <button\n                  className=\"button info\"\n                  onClick={() => this.handleModalDisplay()}\n                >\n                  Cancel\n                </button>\n              </section>\n            </div>\n          </div>\n        );\n      } else {\n        return null;\n      }\n    };\n    return (\n      <div>\n        <ModalDescription\n          toggleModal={this.state.toggleModal}\n          handleEditChange={this.handleEditChange}\n          todo_id={this.state.todo_id}\n          text_edit_data={this.state.text_edit_data}\n        />\n        <header>\n          <nav class=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n            <div class=\"navbar-brand\">\n              <a class=\"navbar-item\" href=\"/ToDo\">\n                <img\n                  alt=\"\"\n                  src=\"https://img.icons8.com/fluent/48/000000/todo-list.png\"\n                />\n              </a>\n              <text class=\"navbar-item\">To-Do</text>\n            </div>\n\n            <div id=\"navbarBasicExample\" class=\"navbar-menu\">\n              <div class=\"navbar-start\"></div>\n            </div>\n\n            <div class=\"navbar-end\">\n              <div class=\"navbar-item \">\n                <a href>\n                  Hi{\" \"}\n                  {localStorage.getItem(\"user_name\") == null\n                    ? \"User\"\n                    : localStorage.getItem(\"user_name\").toUpperCase()}\n                </a>\n              </div>\n              <div class=\"navbar-item\">\n                <div class=\"buttons\">\n                  <button onClick={this.clearAll} class=\"button is-light\">\n                    Log Out\n                  </button>\n                </div>\n              </div>\n            </div>\n          </nav>\n        </header>\n\n        <div id = \"div_1\" class=\"div_1\">\n        \n          {this.state.responseList.map((elementData) => {\n            return (\n              <ToDoItem\n                todo={elementData}\n                onClickFunction={this.onClickFunction}\n                handleModalDisplay={this.handleModalDisplay}\n              />\n            );\n          })}\n          {this.state.responseList.length === 0 ? \n          <div className=\"center is-size-1-desktop\">\n            Your To-Do List Is Empty, Please add your To-Do's\n\n            </div>\n            : null\n          }\n           \n          </div>\n       \n          <div id = \"div_2\" className=\"div_2\">\n            <textarea\n              class=\"textarea\"\n              placeholder=\"Please write your todo here\"\n              onChange={this.handleChange}\n            ></textarea>\n              <div class=\"level-right\">\n            <span>\n              <button\n                className=\"button info\"\n                onClick={() => this.onEnterClickAction()}\n              >\n                Save\n              </button>\n            </span>\n          </div>\n          </div>\n        \n       \n      </div>\n    );\n  }\n}\n\nexport default ToDo;\n"]},"metadata":{},"sourceType":"module"}