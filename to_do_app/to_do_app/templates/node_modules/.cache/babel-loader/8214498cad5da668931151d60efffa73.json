{"ast":null,"code":"var _jsxFileName = \"/home/nmandge/projetcs/to-do-app/to_do_app/to_do_app/templates/src/screens/login/index.js\";\nimport React, { Component } from \"react\";\nimport \"./index.scss\"; // import Loader from 'react-loader-spinner';\n\nimport APIURLS from \"../../api-urls/to-do-api\";\nexport class LoginPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getUserDetailsData = () => {\n      var userNameNode = document.getElementById(\"username\").value;\n      var userPermNode = document.getElementById(\"password\").value;\n\n      if (userNameNode !== null && userPermNode !== null && userNameNode.trim() !== \"\" && userPermNode.trim() !== \"\") {\n        var input = document.getElementById(\"myInput\");\n        input.addEventListener(\"keyup\", function (event) {\n          if (event.keyCode === 13) {\n            event.preventDefault();\n            document.getElementById(\"myBtn\").click();\n          }\n        });\n        fetch(APIURLS.V1.validateUser, {\n          method: \"POST\",\n          mode: \"cors\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            username: userNameNode,\n            password: userPermNode\n          })\n        }).then(response => response.json()).then(json => {\n          if (json[\"key\"] !== undefined) {\n            localStorage.setItem(\"key\", json[\"key\"]);\n            localStorage.setItem(\"user_name\", json[\"user\"][\"username\"]);\n            this.props.history.push(\"/ToDo\");\n          } else {\n            this.setState({\n              isError: true,\n              errorMsg: \"Please enter valid credentials\"\n            });\n          }\n        });\n      }\n    };\n\n    this.state = {\n      isauth: false,\n      chart: null,\n      userName: null,\n      isError: false,\n      errorMsg: \"\"\n    };\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentDidMount() {\n    localStorage.clear();\n  } // componentDidUpdate(prevProps, prevState) {\n  // \tif (this.props.Token !== null && this.props.Token !== '' && prevProps.Token !== this.props.Token) {\n  // \t\tthis.props.history.push('/Dashboard/People');\n  // \t}\n  // }\n\n\n  handleKeyDown(e) {\n    if (e.key === \"Enter\") {\n      var userNameNode = document.getElementById(\"username\").value;\n      var userPermNode = document.getElementById(\"password\").value;\n\n      if (userNameNode !== null && userPermNode !== null && userNameNode.trim() !== \"\" && userPermNode.trim() !== \"\") {\n        var input = document.getElementById(\"myInput\");\n        input.addEventListener(\"keyup\", function (event) {\n          if (event.keyCode === 13) {\n            event.preventDefault();\n            document.getElementById(\"myBtn\").click();\n          }\n        });\n        fetch(APIURLS.V1.validateUser, {\n          method: \"POST\",\n          mode: \"cors\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            username: userNameNode,\n            password: userPermNode\n          })\n        }).then(response => response.json()).then(json => {\n          this.setState({\n            key: json[\"key\"]\n          });\n\n          if (json[\"key\"] !== undefined) {\n            localStorage.setItem(\"key\", json[\"key\"]);\n            localStorage.setItem(\"user_name\", json[\"user\"][\"username\"]);\n            this.props.history.push(\"/ToDo\");\n          } else {\n            this.setState({\n              isError: true,\n              errorMsg: \"Please enter valid credentials\"\n            });\n          }\n        });\n      }\n    }\n  }\n\n  render() {\n    const LoginBoxContent = () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"sufficiency-of-input \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"heading-font\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"To Do Application\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \" \", React.createElement(\"div\", {\n        className: \"card-box-margin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        action: \"\",\n        className: \"box bg-color-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"\",\n        className: \"label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"UserName\"), React.createElement(\"div\", {\n        className: \"control has-icons-left bg-color-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"username\",\n        type: \"email\",\n        placeholder: \"e.g. username@test.com\",\n        className: \"input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"icon is-small is-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-envelope\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"\",\n        className: \"label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"div\", {\n        className: \"control has-icons-left bg-color-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"password\",\n        type: \"password\",\n        placeholder: \"*******\",\n        className: \"input\",\n        required: true,\n        onKeyDown: this.handleKeyDown,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"icon is-small is-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-lock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: true,\n        id: \"myInput\",\n        className: \"button is-info\",\n        onClick: () => this.getUserDetailsData(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Login\")), this.state.isError ? React.createElement(\"div\", {\n        className: \"error-msg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, this.state.errorMsg) : null)))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }));\n    };\n\n    if (this.state.isauth === false) {\n      return React.createElement(\"div\", {\n        className: \"container-fluid home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"navbar navbar-align nav-home\",\n        role: \"navigation\",\n        \"aria-label\": \"main navigation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"navbar-brand\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      })), React.createElement(LoginBoxContent, {\n        showDetails: this.state.showModal,\n        closeModal: this.toggleAnalyzerModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }));\n    } else {\n      return \"test\"; // return<Loader\n      // \t\tclassName=\"loader-display\"\n      // \t\ttype=\"Oval\"\n      // \t\tcolor=\"#001e59\"\n      // \t\theight={100}\n      // \t\twidth={100}\n      // \t\tvisible={true}\n      // \t/>\n    }\n  }\n\n} // const mapStateToProps = (state) => {\n// \treturn {\n// \t\tUserName: state.LoginDataReducer.UserName,\n// \t\tPassWord: state.LoginDataReducer.passWord,\n// \t\tIsAuthenticated: state.LoginDataReducer.IsAuthenticated,\n// \t\tToken: state.LoginDataReducer.Token\n// \t};\n// };\n// const mapDispatchToProps = (dispatch) => {\n// \treturn {\n// \t\tgetUserDetails: (userName, passWord, isauth, token) => {\n// \t\t\tdispatch(credentialAuthenticator(userName, passWord, isauth, token));\n// \t\t}\n// \t};\n// };\n// export default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\n\nexport default LoginPage;","map":{"version":3,"sources":["/home/nmandge/projetcs/to-do-app/to_do_app/to_do_app/templates/src/screens/login/index.js"],"names":["React","Component","APIURLS","LoginPage","constructor","props","getUserDetailsData","userNameNode","document","getElementById","value","userPermNode","trim","input","addEventListener","event","keyCode","preventDefault","click","fetch","V1","validateUser","method","mode","headers","body","JSON","stringify","username","password","then","response","json","undefined","localStorage","setItem","history","push","setState","isError","errorMsg","state","isauth","chart","userName","handleKeyDown","bind","componentDidMount","clear","e","key","render","LoginBoxContent","showModal","toggleAnalyzerModal"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./index.scss\";\n// import Loader from 'react-loader-spinner';\nimport APIURLS from \"../../api-urls/to-do-api\";\n\nexport class LoginPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isauth: false,\n      chart: null,\n      userName: null,\n      isError: false,\n      errorMsg: \"\",\n    };\n\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n  componentDidMount() {\n    localStorage.clear();\n  }\n\n  // componentDidUpdate(prevProps, prevState) {\n  // \tif (this.props.Token !== null && this.props.Token !== '' && prevProps.Token !== this.props.Token) {\n  // \t\tthis.props.history.push('/Dashboard/People');\n  // \t}\n  // }\n\n  handleKeyDown(e) {\n    if (e.key === \"Enter\") {\n      var userNameNode = document.getElementById(\"username\").value;\n      var userPermNode = document.getElementById(\"password\").value;\n\n      if (\n        userNameNode !== null &&\n        userPermNode !== null &&\n        userNameNode.trim() !== \"\" &&\n        userPermNode.trim() !== \"\"\n      ) {\n        var input = document.getElementById(\"myInput\");\n\n        input.addEventListener(\"keyup\", function (event) {\n          if (event.keyCode === 13) {\n            event.preventDefault();\n            document.getElementById(\"myBtn\").click();\n          }\n        });\n\n        fetch(APIURLS.V1.validateUser, {\n          method: \"POST\",\n          mode: \"cors\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            username: userNameNode,\n            password: userPermNode,\n          }),\n        })\n          .then((response) => response.json())\n          .then((json) => {\n            this.setState({\n              key: json[\"key\"],\n            });\n            if (json[\"key\"] !== undefined) {\n              localStorage.setItem(\"key\", json[\"key\"]);\n              localStorage.setItem(\"user_name\", json[\"user\"][\"username\"]);\n              this.props.history.push(\"/ToDo\");\n            } else {\n              this.setState({\n                isError: true,\n                errorMsg: \"Please enter valid credentials\",\n              });\n            }\n          });\n      }\n    }\n  }\n\n  getUserDetailsData = () => {\n    var userNameNode = document.getElementById(\"username\").value;\n    var userPermNode = document.getElementById(\"password\").value;\n\n    if (\n      userNameNode !== null &&\n      userPermNode !== null &&\n      userNameNode.trim() !== \"\" &&\n      userPermNode.trim() !== \"\"\n    ) {\n      var input = document.getElementById(\"myInput\");\n\n      input.addEventListener(\"keyup\", function (event) {\n        if (event.keyCode === 13) {\n          event.preventDefault();\n          document.getElementById(\"myBtn\").click();\n        }\n      });\n\n      fetch(APIURLS.V1.validateUser, {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          username: userNameNode,\n          password: userPermNode,\n        }),\n      })\n        .then((response) => response.json())\n        .then((json) => {\n          if (json[\"key\"] !== undefined) {\n            localStorage.setItem(\"key\", json[\"key\"]);\n            localStorage.setItem(\"user_name\", json[\"user\"][\"username\"]);\n            this.props.history.push(\"/ToDo\");\n          } else {\n            this.setState({\n              isError: true,\n              errorMsg: \"Please enter valid credentials\",\n            });\n          }\n        });\n    }\n  };\n\n  render() {\n    const LoginBoxContent = () => {\n      return (\n        <div>\n          <div className=\"sufficiency-of-input \">\n            <p className=\"heading-font\">To Do Application</p>\n          </div>\n          <div>\n            {\" \"}\n            <div className=\"card-box-margin\">\n              <div>\n                <form action=\"\" className=\"box bg-color-box\">\n                  <div className=\"field\">\n                    <label for=\"\" className=\"label\">\n                      UserName\n                    </label>\n                    <div className=\"control has-icons-left bg-color-box\">\n                      <input\n                        id=\"username\"\n                        type=\"email\"\n                        placeholder=\"e.g. username@test.com\"\n                        className=\"input\"\n                      />\n                      <span className=\"icon is-small is-left\">\n                        <i className=\"fa fa-envelope\" />\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"field\">\n                    <label for=\"\" className=\"label\">\n                      Password\n                    </label>\n                    <div className=\"control has-icons-left bg-color-box\">\n                      <input\n                        id=\"password\"\n                        type=\"password\"\n                        placeholder=\"*******\"\n                        className=\"input\"\n                        required\n                        onKeyDown={this.handleKeyDown}\n                      />\n                      <span className=\"icon is-small is-left\">\n                        <i className=\"fa fa-lock\" />\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"field\">\n                    <a\n                      href\n                      id=\"myInput\"\n                      className=\"button is-info\"\n                      onClick={() => this.getUserDetailsData()}\n                    >\n                      Login\n                    </a>\n                  </div>\n                  {this.state.isError ? (\n                    <div className=\"error-msg\">{this.state.errorMsg}</div>\n                  ) : null}\n                </form>\n              </div>\n            </div>\n          </div>\n          <div />\n        </div>\n      );\n    };\n    if (this.state.isauth === false) {\n      return (\n        <div className=\"container-fluid home\">\n          <nav\n            className=\"navbar navbar-align nav-home\"\n            role=\"navigation\"\n            aria-label=\"main navigation\"\n          >\n            <div className=\"navbar-brand\" />\n          </nav>\n          <LoginBoxContent\n            showDetails={this.state.showModal}\n            closeModal={this.toggleAnalyzerModal}\n          />\n        </div>\n      );\n    } else {\n      return \"test\";\n      // return<Loader\n      // \t\tclassName=\"loader-display\"\n      // \t\ttype=\"Oval\"\n      // \t\tcolor=\"#001e59\"\n      // \t\theight={100}\n      // \t\twidth={100}\n      // \t\tvisible={true}\n      // \t/>\n    }\n  }\n}\n\n// const mapStateToProps = (state) => {\n// \treturn {\n// \t\tUserName: state.LoginDataReducer.UserName,\n// \t\tPassWord: state.LoginDataReducer.passWord,\n// \t\tIsAuthenticated: state.LoginDataReducer.IsAuthenticated,\n// \t\tToken: state.LoginDataReducer.Token\n// \t};\n// };\n\n// const mapDispatchToProps = (dispatch) => {\n// \treturn {\n// \t\tgetUserDetails: (userName, passWord, isauth, token) => {\n// \t\t\tdispatch(credentialAuthenticator(userName, passWord, isauth, token));\n// \t\t}\n// \t};\n// };\n\n// export default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}